/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ChallengeFactoyGuessTheNumber,
  ChallengeFactoyGuessTheNumberInterface,
} from "../../../CaptureTheEther/Afactory.guess-the-number.sol/ChallengeFactoyGuessTheNumber";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "create",
    outputs: [
      {
        internalType: "contract ICTF",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506105d3806100206000396000f3fe6080604052600436106100295760003560e01c806398d5fdca1461002e5780639ed9331814610059575b600080fd5b34801561003a57600080fd5b50610043610089565b60405161005091906100f3565b60405180910390f35b610073600480360381019061006e9190610171565b610099565b60405161008091906101fd565b60405180910390f35b6000670de0b6b3a7640000905090565b6000346040516100a8906100cd565b6040518091039082f09050801580156100c5573d6000803e3d6000fd5b509050919050565b6103858061021983390190565b6000819050919050565b6100ed816100da565b82525050565b600060208201905061010860008301846100e4565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061013e82610113565b9050919050565b61014e81610133565b811461015957600080fd5b50565b60008135905061016b81610145565b92915050565b6000602082840312156101875761018661010e565b5b60006101958482850161015c565b91505092915050565b6000819050919050565b60006101c36101be6101b984610113565b61019e565b610113565b9050919050565b60006101d5826101a8565b9050919050565b60006101e7826101ca565b9050919050565b6101f7816101dc565b82525050565b600060208201905061021260008301846101ee565b9291505056fe6080604052602a6000806101000a81548160ff021916908360ff160217905550670de0b6b3a76400003414610069576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610060906100cb565b60405180910390fd5b6100eb565b600082825260208201905092915050565b7f596f75206d75737420706179203120657468657220746f20706c617900000000600082015250565b60006100b5601c8361006e565b91506100c08261007f565b602082019050919050565b600060208201905081810360008301526100e4816100a8565b9050919050565b61028b806100fa6000396000f3fe6080604052600436106100295760003560e01c80634ba4c16b1461002e578063b2fa1c9e1461004a575b600080fd5b61004860048036038101906100439190610175565b610075565b005b34801561005657600080fd5b5061005f61012d565b60405161006c91906101bd565b60405180910390f35b670de0b6b3a764000034146100bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100b690610235565b60405180910390fd5b60008054906101000a900460ff1660ff168160ff16141561012a573373ffffffffffffffffffffffffffffffffffffffff166108fc671bc16d674ec800009081150290604051600060405180830381858888f19350505050158015610128573d6000803e3d6000fd5b505b50565b6000804714905090565b600080fd5b600060ff82169050919050565b6101528161013c565b811461015d57600080fd5b50565b60008135905061016f81610149565b92915050565b60006020828403121561018b5761018a610137565b5b600061019984828501610160565b91505092915050565b60008115159050919050565b6101b7816101a2565b82525050565b60006020820190506101d260008301846101ae565b92915050565b600082825260208201905092915050565b7f596f75206d75737420706179203120657468657220746f20706c617900000000600082015250565b600061021f601c836101d8565b915061022a826101e9565b602082019050919050565b6000602082019050818103600083015261024e81610212565b905091905056fea26469706673582212207b159f982a0c23323869fe19922560927fed25b38a4a307173b5ae962ebd323464736f6c634300080c0033a2646970667358221220535225520d2f8233284a573ae9e567b1c8c5360e0e4e8487263d79ead811fc0664736f6c634300080c0033";

type ChallengeFactoyGuessTheNumberConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ChallengeFactoyGuessTheNumberConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ChallengeFactoyGuessTheNumber__factory extends ContractFactory {
  constructor(...args: ChallengeFactoyGuessTheNumberConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ChallengeFactoyGuessTheNumber> {
    return super.deploy(
      overrides || {}
    ) as Promise<ChallengeFactoyGuessTheNumber>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ChallengeFactoyGuessTheNumber {
    return super.attach(address) as ChallengeFactoyGuessTheNumber;
  }
  override connect(signer: Signer): ChallengeFactoyGuessTheNumber__factory {
    return super.connect(signer) as ChallengeFactoyGuessTheNumber__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ChallengeFactoyGuessTheNumberInterface {
    return new utils.Interface(_abi) as ChallengeFactoyGuessTheNumberInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ChallengeFactoyGuessTheNumber {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ChallengeFactoyGuessTheNumber;
  }
}
